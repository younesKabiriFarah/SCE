{"remainingRequest":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/babel-loader/lib/index.js!/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/src/views/Paypal.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/src/views/Paypal.vue","mtime":1655073675508},{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/babel.config.js","mtime":1652639069000},{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAncGF5cGFsJywKICBwcm9wczogWydhbW91bnQnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZXJyb3I6IGZhbHNlLAogICAgICBzdWNjZXNzOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbmREYXRhUGF5cGFsOiBmdW5jdGlvbiBzZW5kRGF0YVBheXBhbChjcmVkcykgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9jaGVja291dCcsIGNyZWRzKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIHJldHVybiByZXNvbHZlKCk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycikgewogICAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciBjbGllbnQgPSB7CiAgICAgIHNhbmRib3g6ICdZT1VSIENMSUVOVCBJRCcKICAgIH07CgogICAgdmFyIHBheW1lbnQgPSBmdW5jdGlvbiBwYXltZW50KGRhdGEsIGFjdGlvbnMpIHsKICAgICAgLy8gTWFrZSBhIGNhbGwgdG8gdGhlIFJFU1QgYXBpIHRvIGNyZWF0ZSB0aGUgcGF5bWVudAogICAgICByZXR1cm4gYWN0aW9ucy5wYXltZW50LmNyZWF0ZSh7CiAgICAgICAgcGF5bWVudDogewogICAgICAgICAgdHJhbnNhY3Rpb25zOiBbewogICAgICAgICAgICBhbW91bnQ6IHsKICAgICAgICAgICAgICB0b3RhbDogX3RoaXMuYW1vdW50LAogICAgICAgICAgICAgIGN1cnJlbmN5OiAnVVNEJwogICAgICAgICAgICB9CiAgICAgICAgICB9XQogICAgICAgIH0KICAgICAgfSk7CiAgICB9OwoKICAgIHZhciBvbkF1dGhvcml6ZSA9IGZ1bmN0aW9uIG9uQXV0aG9yaXplKGRhdGEpIHsKICAgICAgdmFyIGRhdGEgPSB7CiAgICAgICAgcGF5bWVudElEOiBkYXRhLnBheW1lbnRJRCwKICAgICAgICBwYXllcklEOiBkYXRhLnBheWVySUQsCiAgICAgICAgYW1vdW50OiBfdGhpcy5hbW91bnQKICAgICAgfTsKCiAgICAgIF90aGlzLnNlbmREYXRhUGF5cGFsKHsKICAgICAgICBkYXRhOiBkYXRhCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLnN1Y2Nlc3MgPSB0cnVlOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgX3RoaXMuZXJyb3IgPSB0cnVlOwogICAgICB9KTsKICAgIH07CgogICAgcGF5cGFsLkJ1dHRvbi5yZW5kZXIoewogICAgICBlbnY6ICdzYW5kYm94JywKICAgICAgLy8gc2FuZGJveCB8IHByb2R1Y3Rpb24KICAgICAgY29tbWl0OiB0cnVlLAogICAgICBjbGllbnQ6IGNsaWVudCwKICAgICAgcGF5bWVudDogcGF5bWVudCwKICAgICAgb25BdXRob3JpemU6IG9uQXV0aG9yaXplCiAgICB9LCAnI3BheXBhbC1idXR0b24tY29udGFpbmVyJyk7CiAgfQp9Ow=="},{"version":3,"mappings":";AAYA,OAAOA,KAAP,MAAkB,OAAlB;AACA,eAAe;AACXC,MAAI,EAAC,QADM;AAEXC,OAAK,EAAC,CAAC,QAAD,CAFK;AAGXC,MAHW,kBAGJ;AACH,WAAO;AACHC,WAAK,EAAC,KADH;AAEHC,aAAO,EAAC;AAFL,KAAP;AAIH,GARU;AASXC,SAAO,EAAC;AACJC,kBADI,0BACYC,KADZ,EACmB;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCX,aAAK,CAACY,IAAN,CAAW,gCAAX,EAA6CJ,KAA7C,EAAoDK,IAApD,CAAyD,aAAE,EAAK;AAC5D,iBAAOH,OAAO,EAAd;AACH,SAFD,EAEGI,KAFH,CAES,UAACC,GAAD,EAAS;AACd,iBAAOJ,MAAM,CAACI,GAAD,CAAb;AACH,SAJD;AAKD,OANM,CAAP;AAOJ;AATI,GATG;AAoBXC,SApBW,qBAoBF;AAAA;;AACF,QAAKC,MAAK,GAAI;AACPC,aAAO,EAAE;AADF,KAAd;;AAGA,QAAKC,OAAM,GAAI,SAAVA,OAAU,CAAChB,IAAD,EAAOiB,OAAP,EAAmB;AAC7B;AACA,aAAOA,OAAO,CAACD,OAAR,CAAgBE,MAAhB,CAAuB;AAC1BF,eAAO,EAAE;AACLG,sBAAY,EAAE,CACV;AACIC,kBAAM,EAAE;AAAEC,mBAAK,EAAC,KAAI,CAACD,MAAb;AAAqBE,sBAAQ,EAAE;AAA/B;AADZ,WADU;AADT;AADiB,OAAvB,CAAP;AASJ,KAXD;;AAYC,QAAKC,WAAU,GAAI,SAAdA,WAAc,CAACvB,IAAD,EAAU;AACzB,UAAIA,IAAG,GAAI;AACPwB,iBAAS,EAAExB,IAAI,CAACwB,SADT;AAEPC,eAAO,EAAEzB,IAAI,CAACyB,OAFP;AAGPL,cAAM,EAAC,KAAI,CAACA;AAHL,OAAX;;AAKA,WAAI,CAAChB,cAAL,CAAoB;AAACJ,YAAI,EAACA;AAAN,OAApB,EAAiCU,IAAjC,CAAsC,YAAM;AACxC,aAAI,CAACR,OAAL,GAAa,IAAb;AACH,OAFD,EAEGS,KAFH,CAES,aAAG,EAAE;AACV,aAAI,CAACV,KAAL,GAAW,IAAX;AACH,OAJD;AAKJ,KAXA;;AAYAyB,UAAM,CAACC,MAAP,CAAcC,MAAd,CAAqB;AACjBC,SAAG,EAAE,SADY;AACD;AAChBC,YAAM,EAAE,IAFS;AAGjBhB,YAAM,EAANA,MAHiB;AAIjBE,aAAO,EAAPA,OAJiB;AAKjBO,iBAAU,EAAVA;AALiB,KAArB,EAMC,0BAND;AAOR;AAvDW,CAAf","names":["axios","name","props","data","error","success","methods","sendDataPaypal","creds","Promise","resolve","reject","post","then","catch","err","mounted","client","sandbox","payment","actions","create","transactions","amount","total","currency","onAuthorize","paymentID","payerID","paypal","Button","render","env","commit"],"sourceRoot":"","sources":["/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/src/views/Paypal.vue"],"sourcesContent":["<template>\n<div>\n<div id=\"paypal-button-container\"></div>\n<div v-if=\"success\" class=\"alert alert-success\">\n  <strong>Success!</strong> Payment successfuly done\n</div>\n<div v-if=\"error\" class=\"alert alert-danger\">\n  <strong>Ooops!</strong>  Something went wrong!\n</div>\n</div>\n</template>\n<script>\nimport axios from 'axios'\nexport default {\n    name:'paypal',\n    props:['amount'],\n    data (){\n        return {\n            error:false ,\n            success:false\n        }\n    },\n    methods:{\n        sendDataPaypal (creds) {\n            return new Promise((resolve, reject) => {\n              axios.post('http://localhost:3000/checkout', creds).then(res => {\n                  return resolve()\n              }).catch((err) => {\n                  return reject(err)\n              })\n            })\n        }\n    },\n    mounted(){\n           let  client = {\n                  sandbox: 'YOUR CLIENT ID',\n           }\n           let  payment = (data, actions) => {\n                // Make a call to the REST api to create the payment\n                return actions.payment.create({\n                    payment: {\n                        transactions: [\n                            {\n                                amount: { total:this.amount, currency: 'USD' }\n                            }\n                        ]\n                    }\n                });\n            }\n            let  onAuthorize = (data) => {\n                var data = {\n                    paymentID: data.paymentID,\n                    payerID: data.payerID,\n                    amount:this.amount\n                };\n                this.sendDataPaypal({data:data}).then(() => {\n                    this.success=true\n                }).catch(err=>{\n                    this.error=true\n                });\n            }\n            paypal.Button.render({\n                env: 'sandbox', // sandbox | production\n                commit: true,\n                client,\n                payment,\n                onAuthorize\n          }, '#paypal-button-container');\n    }\n}\n</script>\n"]}]}