{"remainingRequest":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/src/views/Paypal.vue?vue&type=template&id=1521c02d","dependencies":[{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/src/views/Paypal.vue","mtime":1655073675508},{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CjxkaXYgaWQ9InBheXBhbC1idXR0b24tY29udGFpbmVyIj48L2Rpdj4KPGRpdiB2LWlmPSJzdWNjZXNzIiBjbGFzcz0iYWxlcnQgYWxlcnQtc3VjY2VzcyI+CiAgPHN0cm9uZz5TdWNjZXNzITwvc3Ryb25nPiBQYXltZW50IHN1Y2Nlc3NmdWx5IGRvbmUKPC9kaXY+CjxkaXYgdi1pZj0iZXJyb3IiIGNsYXNzPSJhbGVydCBhbGVydC1kYW5nZXIiPgogIDxzdHJvbmc+T29vcHMhPC9zdHJvbmc+ICBTb21ldGhpbmcgd2VudCB3cm9uZyEKPC9kaXY+CjwvZGl2Pgo="},{"version":3,"sources":["/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/src/views/Paypal.vue"],"names":[],"mappings":";AACA,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/yuoneskabiri/Desktop/UNI/SCE/Practica/e-commerce-vue/src/views/Paypal.vue","sourceRoot":"","sourcesContent":["<template>\n<div>\n<div id=\"paypal-button-container\"></div>\n<div v-if=\"success\" class=\"alert alert-success\">\n  <strong>Success!</strong> Payment successfuly done\n</div>\n<div v-if=\"error\" class=\"alert alert-danger\">\n  <strong>Ooops!</strong>  Something went wrong!\n</div>\n</div>\n</template>\n<script>\nimport axios from 'axios'\nexport default {\n    name:'paypal',\n    props:['amount'],\n    data (){\n        return {\n            error:false ,\n            success:false\n        }\n    },\n    methods:{\n        sendDataPaypal (creds) {\n            return new Promise((resolve, reject) => {\n              axios.post('http://localhost:3000/checkout', creds).then(res => {\n                  return resolve()\n              }).catch((err) => {\n                  return reject(err)\n              })\n            })\n        }\n    },\n    mounted(){\n           let  client = {\n                  sandbox: 'YOUR CLIENT ID',\n           }\n           let  payment = (data, actions) => {\n                // Make a call to the REST api to create the payment\n                return actions.payment.create({\n                    payment: {\n                        transactions: [\n                            {\n                                amount: { total:this.amount, currency: 'USD' }\n                            }\n                        ]\n                    }\n                });\n            }\n            let  onAuthorize = (data) => {\n                var data = {\n                    paymentID: data.paymentID,\n                    payerID: data.payerID,\n                    amount:this.amount\n                };\n                this.sendDataPaypal({data:data}).then(() => {\n                    this.success=true\n                }).catch(err=>{\n                    this.error=true\n                });\n            }\n            paypal.Button.render({\n                env: 'sandbox', // sandbox | production\n                commit: true,\n                client,\n                payment,\n                onAuthorize\n          }, '#paypal-button-container');\n    }\n}\n</script>\n"]}]}